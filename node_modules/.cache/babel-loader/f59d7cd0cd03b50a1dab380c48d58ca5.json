{"remainingRequest":"/Users/favourkelvin/Documents/contactList/node_modules/babel-loader/lib/index.js!/Users/favourkelvin/Documents/contactList/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/favourkelvin/Documents/contactList/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/favourkelvin/Documents/contactList/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/favourkelvin/Documents/contactList/src/App.vue","mtime":1613381325916},{"path":"/Users/favourkelvin/Documents/contactList/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/favourkelvin/Documents/contactList/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/favourkelvin/Documents/contactList/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/favourkelvin/Documents/contactList/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudGltZXJzLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aW1lcjogbnVsbCwKICAgICAgLy8gY2hlY2sgaWYgaXMgaW4gaW5maW5pdGUgcHJvY2VlcwogICAgICBidXN5OiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluZmluaXRlU2Nyb2xsSGFuZGxlcjogZnVuY3Rpb24gaW5maW5pdGVTY3JvbGxIYW5kbGVyKCkgewogICAgICAvL2NoZWNrIGlmIGNvbnRhaW5lcidzIGJ0dG9tIGlzIG92ZXJmbG93IHNjcmVlbgogICAgICB2YXIgYm90dG9tT2ZmID0gdGhpcy4kcmVmcy5sb2FkbW9yZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5ib3R0b20gLSBzY3JlZW4uaGVpZ2h0OwoKICAgICAgaWYgKGJvdHRvbU9mZiA8IDEwICYmICF0aGlzLmJ1c3kpIHsKICAgICAgICBjb25zb2xlLmxvZygibG9hZGluZy4uLiAiICsgbmV3IERhdGUoKSk7CiAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTsgLy8gZG8gc29tZXRoaW5nIAoKICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIHNldEludGVydmFsVGltZXI6IGZ1bmN0aW9uIHNldEludGVydmFsVGltZXIoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvL2NoZWNrIGV2ZXJ5IDUwMCBtaWxsaXNlY29uZHMKICAgICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5pbmZpbml0ZVNjcm9sbEhhbmRsZXIoKTsKICAgICAgfSwgNTAwKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyBzZXQgdXAgdGltZXIgb24gbW91bnRlZAogICAgdGhpcy5zZXRJbnRlcnZhbFRpbWVyKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgLy8gZG8gbm90IGZvcmdldCBjbGVhciB0aGUgaW50ZXJ2YWwgdGltZXIKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgfQp9Ow=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;AAWA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA;AACA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,qBADA,mCACA;AACA;AACA,UAAA,SAAA,GACA,KAAA,KAAA,CAAA,QAAA,CAAA,qBAAA,GAAA,MAAA,GAAA,MAAA,CAAA,MADA;;AAEA,UAAA,SAAA,GAAA,EAAA,IAAA,CAAA,KAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,IAAA,IAAA,EAAA;AACA,aAAA,IAAA,GAAA,IAAA,CAFA,CAGA;;AACA,aAAA,IAAA,GAAA,KAAA;AACA;AACA,KAXA;AAYA,IAAA,gBAZA,8BAYA;AAAA;;AACA;AACA,WAAA,KAAA,GAAA,WAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,qBAAA;AACA,OAFA,EAEA,GAFA,CAAA;AAGA;AAjBA,GARA;AA2BA,EAAA,OA3BA,qBA2BA;AACA;AACA,SAAA,gBAAA;AACA,GA9BA;AA+BA,EAAA,aA/BA,2BA+BA;AACA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA;AAlCA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <div id=\"nav\" ref=\"loadmore\" class=\"infinite-container\">\n      <router-link to=\"/\">Home</router-link> |\n      <router-link to=\"/create\">Create</router-link>\n    </div>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      timer: null,\n      // check if is in infinite procees\n      busy: false\n    }\n  },\n  methods: {\n    infiniteScrollHandler() {\n        //check if container's bttom is overflow screen\n      let bottomOff =\n        this.$refs.loadmore.getBoundingClientRect().bottom - screen.height;\n      if (bottomOff < 10 && !this.busy) {\n        console.log(\"loading... \" + new Date());\n        this.busy = true;\n        // do something \n        this.busy = false;\n      }\n    },\n    setIntervalTimer() {\n      //check every 500 milliseconds\n      this.timer = setInterval(() => {\n        this.infiniteScrollHandler();\n      }, 500);\n    }\n  },\n  mounted() {\n      // set up timer on mounted\n    this.setIntervalTimer();\n  },\n  beforeDestroy() {\n      // do not forget clear the interval timer\n    clearInterval(this.timer);\n  }\n};\n</script>\n\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":"src"}]}